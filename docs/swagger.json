{
    "swagger": "2.0",
    "info": {
        "description": "APIs available for demtech.",
        "title": "Demtech Mock SES",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "host": "localhost:9090",
    "basePath": "/",
    "paths": {
        "/logs": {
            "get": {
                "description": "Retrieves aggregated logs with optional filtering by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get aggregated logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter logs by username",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.handlerGetLogsAggregatesResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Health check endpoint that returns \"pong\"",
                "produces": [
                    "application/json"
                ],
                "summary": "Ping endpoint",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v2/email/outbound-emails": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "The Mock API accepts SES parameters in request body and triggers response based on the Scenario header",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Mock scenario to simulate (success, unverified_email, account_suspended, rate_exceeded, missing_from, domain_not_verified, daily_quota_exceeded)",
                        "name": "Scenario",
                        "in": "header"
                    },
                    {
                        "description": "Accepts the same parameters as SES send email v2",
                        "name": "handleSendEmailArgs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.handleSendEmailArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/email.SendEmailResponse"
                        }
                    },
                    "400": {
                        "description": "Message rejected, validation error, bad request, or unverified domain (MessageRejected, ValidationException, BadRequestException, MailFromDomainNotVerifiedException)",
                        "schema": {
                            "$ref": "#/definitions/email.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Account suspended (AccountSuspendedException)",
                        "schema": {
                            "$ref": "#/definitions/email.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too many requests (TooManyRequestsException)",
                        "schema": {
                            "$ref": "#/definitions/email.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error (InternalServerError)",
                        "schema": {
                            "$ref": "#/definitions/email.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "email.ErrorResponse": {
            "type": "object",
            "properties": {
                "Code": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "RequestId": {
                    "type": "string"
                }
            }
        },
        "email.SendEmailResponse": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "type": "string"
                }
            }
        },
        "main.Body": {
            "type": "object",
            "properties": {
                "Html": {
                    "$ref": "#/definitions/main.Content"
                },
                "Text": {
                    "$ref": "#/definitions/main.Content"
                }
            }
        },
        "main.Content": {
            "type": "object",
            "properties": {
                "Charset": {
                    "type": "string"
                },
                "Data": {
                    "type": "string"
                }
            }
        },
        "main.Destination": {
            "type": "object",
            "properties": {
                "BccAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CcAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ToAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "main.EmailContent": {
            "type": "object",
            "properties": {
                "Raw": {
                    "$ref": "#/definitions/main.RawMessageContent"
                },
                "Simple": {
                    "$ref": "#/definitions/main.SimpleEmailContent"
                },
                "Template": {
                    "$ref": "#/definitions/main.TemplateEmailContent"
                }
            }
        },
        "main.EmailHeader": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "main.ListManagementOptions": {
            "type": "object",
            "properties": {
                "ContactListName": {
                    "type": "string"
                },
                "TopicName": {
                    "type": "string"
                }
            }
        },
        "main.MessageTag": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "main.RawMessageContent": {
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "main.SimpleEmailContent": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/definitions/main.Body"
                },
                "Headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.EmailHeader"
                    }
                },
                "Subject": {
                    "$ref": "#/definitions/main.Content"
                }
            }
        },
        "main.TemplateContent": {
            "type": "object",
            "properties": {
                "Html": {
                    "type": "string"
                },
                "Subject": {
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                }
            }
        },
        "main.TemplateEmailContent": {
            "type": "object",
            "properties": {
                "Headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.EmailHeader"
                    }
                },
                "TemplateArn": {
                    "type": "string"
                },
                "TemplateContent": {
                    "$ref": "#/definitions/main.TemplateContent"
                },
                "TemplateData": {
                    "type": "string"
                },
                "TemplateName": {
                    "type": "string"
                }
            }
        },
        "main.handleSendEmailArgs": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "type": "string"
                },
                "Content": {
                    "$ref": "#/definitions/main.EmailContent"
                },
                "Destination": {
                    "$ref": "#/definitions/main.Destination"
                },
                "EmailTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.MessageTag"
                    }
                },
                "EndpointId": {
                    "type": "string"
                },
                "FeedbackForwardingEmailAddress": {
                    "type": "string"
                },
                "FeedbackForwardingEmailAddressIdentityArn": {
                    "type": "string"
                },
                "FromEmailAddress": {
                    "type": "string"
                },
                "FromEmailAddressIdentityArn": {
                    "type": "string"
                },
                "ListManagementOptions": {
                    "$ref": "#/definitions/main.ListManagementOptions"
                },
                "ReplyToAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "main.handlerGetLogsAggregatesResponse": {
            "type": "object",
            "properties": {
                "Count": {
                    "type": "integer"
                },
                "Scenario": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}